Kind.Book.show.go
: ∀(book: (List (Pair String Kind.Term)))
  String.Concatenator
= λbook
  let P    = λx String.Concatenator
  let cons = λhead λtail
    let P   = λx String.Concatenator
    let new = λhead.fst λhead.snd λnil
      ((Kind.Text.show.go head.fst)
      ((Kind.Text.show.go " = "
      ((Kind.Term.show.go head.snd Nat.zero
      ((Kind.Text.show.go String.newline
      ((Kind.Book.show.go tail
      nil)))))))))
    (~head P new)
  let nil  = λnil nil
  (~book P cons nil)
